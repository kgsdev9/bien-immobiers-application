 public function PrintAllVente(Request $request)
    {
        // Récupérer les critères de filtrage depuis la requête
        $modereglement = $request->input('modereglement'); // Filtrer par mode de règlement (optionnel)
        $table = $request->input('table'); // Filtrer par table (optionnel)

        // Construire la requête de base
        $query = TFacture::with(['modereglement', 'table'])
            ->where('numvente', 'like', 'POS%')
            ->whereDate('created_at', Carbon::today()) // Ventes du jour uniquement
            ->orderByDesc('created_at');

        // Appliquer le filtre par mode de règlement si spécifié
        if (!empty($modereglement)) {
            $query->whereHas('modereglement', function ($q) use ($modereglement) {
                $q->where('id', $modereglement);
            });
        }

        // Appliquer le filtre par table si spécifié
        if (!empty($table)) {
            $query->whereHas('table', function ($q) use ($table) {
                $q->where('id', $table);
            });
        }

        // Récupérer les ventes filtrées
        $listeventes = $query->get();

        // Calculer le total des montants
        $totalMontantHT = $listeventes->sum('montantht');
        $totalMontantTVA = $listeventes->sum('montanttva');
        $totalMontantTTC = $listeventes->sum('montantttc');

        // Générer le PDF
        $pdf = new FPDF();
        $pdf->AddPage('L', 'A4'); // Format paysage
        $pdf->SetFont('Arial', 'B', 14);

        // En-tête principal
        $pdf->SetTextColor(0, 0, 0); // Couleur noire pour le texte
        $pdf->Cell(0, 10, utf8_decode('ETAT DES VENTES'), 0, 1, 'C');
        $pdf->SetFont('Arial', '', 10);
        $pdf->Cell(0, 6, utf8_decode('(de la journée)'), 0, 1, 'C');

        // Trait horizontal gris sous le titre
        $pdf->Ln(3);
        $pdf->SetDrawColor(192, 192, 192);
        $pdf->Line(10, $pdf->GetY(), 290, $pdf->GetY());
        $pdf->Ln(5);

        // En-tête du tableau
        $pdf->SetFont('Arial', '', 10);
        $pdf->SetFillColor(192, 192, 192); // Fond gris
        $headers = [
            'Num Vente', 'Client', 'Téléphone', 'Montant HT', 'Montant TVA', 'Montant TTC',
            'Mode Règlement', 'Table', 'Date de Création'
        ];
        $widths = [27, 40, 25, 30, 30, 30, 30, 30, 30];

        foreach ($headers as $i => $header) {
            $pdf->Cell($widths[$i], 7, utf8_decode($header), 1, 0, 'C', true);
        }
        $pdf->Ln();

        // Corps du tableau
        $pdf->SetFont('Arial', '', 10);
        foreach ($listeventes as $vente) {
            $pdf->Cell($widths[0], 7, utf8_decode($vente->numvente), 1, 0, 'C');
            $pdf->Cell($widths[1], 7, utf8_decode(\Str::limit($vente->nom, 12)), 1, 0, 'C');
            $pdf->Cell($widths[2], 7, utf8_decode($vente->telephone ?? '-'), 1, 0, 'C');
            $pdf->Cell($widths[3], 7, utf8_decode(number_format($vente->montantht, 2)), 1, 0, 'C');
            $pdf->Cell($widths[4], 7, utf8_decode(number_format($vente->montanttva, 2)), 1, 0, 'C');
            $pdf->Cell($widths[5], 7, utf8_decode(number_format($vente->montantttc, 2)), 1, 0, 'C');
            $pdf->Cell($widths[6], 7, utf8_decode($vente->modereglement->libellemodereglement ?? '-'), 1, 0, 'C');
            $pdf->Cell($widths[7], 7, utf8_decode($vente->table->name ?? '-'), 1, 0, 'C');
            $pdf->Cell($widths[8], 7, utf8_decode($vente->created_at->format('d/m/Y')), 1, 0, 'C');
            $pdf->Ln();
        }

        // Ajouter le total à la fin du tableau
        $pdf->Ln(5);
        $pdf->SetFont('Arial', 'B', 10);
        $pdf->Cell(160, 7, utf8_decode('Total HT:'), 1, 0, 'R');
        $pdf->Cell(30, 7, utf8_decode(number_format($totalMontantHT, 2)), 1, 0, 'C');
        $pdf->Ln();
        $pdf->Cell(160, 7, utf8_decode('Total TVA:'), 1, 0, 'R');
        $pdf->Cell(30, 7, utf8_decode(number_format($totalMontantTVA, 2)), 1, 0, 'C');
        $pdf->Ln();
        $pdf->Cell(160, 7, utf8_decode('Total TTC:'), 1, 0, 'R');
        $pdf->Cell(30, 7, utf8_decode(number_format($totalMontantTTC, 2)), 1, 0, 'C');
        $pdf->Ln();

        // Retourner le PDF en réponse
        return response($pdf->Output('S', 'ventes_filtrees.pdf'), 200)
            ->header('Content-Type', 'application/pdf')
            ->header('Content-Disposition', 'attachment; filename="ventes_du_jour.pdf"');
    }





    // public function PrintAllVente(Request $request)
    // {
    //     // Récupérer les critères de filtrage
    //     $modereglement = $request->input('modereglement');
    //     $table = $request->input('table');

    //     // Construire la requête de base
    //     $query = TFacture::with(['modereglement', 'table', 'items.product.category'])
    //         ->where('numvente', 'like', 'POS%')
    //         ->whereDate('created_at', Carbon::today())
    //         ->orderByDesc('created_at');

    //     if (!empty($modereglement)) {
    //         $query->whereHas('modereglement', function ($q) use ($modereglement) {
    //             $q->where('id', $modereglement);
    //         });
    //     }

    //     if (!empty($table)) {
    //         $query->whereHas('table', function ($q) use ($table) {
    //             $q->where('id', $table);
    //         });
    //     }

    //     $listeventes = $query->get();


    //     $ventesParCategorie = [];
    //     foreach ($listeventes as $vente) {
    //         foreach ($vente->items as $ligne) {
    //             $categorie = $ligne->product->category->libellecategorieproduct ?? 'Sans Catégorie';
    //             $ventesParCategorie[$categorie][] = [
    //                 'numvente' => $vente->numvente,
    //                 'client' => $vente->nom ?? '-',
    //                 'produit' => $ligne->product->libelleproduct ?? '-',
    //                 'prix_unitaire' => $ligne->prix_unitaire,
    //                 'quantite' => $ligne->quantite,
    //                 'montant_ttc' => $ligne->montant_ttc,
    //                 'mode_reglement' => $vente->modereglement->libellemodereglement ?? '-',
    //                 'table' => $vente->table->name ?? '-',
    //                 'date' => $vente->created_at->format('d/m/Y')
    //             ];
    //         }
    //     }

    //     // Générer le PDF
    //     $pdf = new FPDF();
    //     $pdf->AddPage('L', 'A4');
    //     $pdf->SetFont('Arial', 'B', 14);

    //     $pdf->Cell(0, 10, utf8_decode('ETAT DES VENTES (par catégorie)'), 0, 1, 'C');
    //     $pdf->Ln(5);

    //     $totalTTC = 0;

    //     foreach ($ventesParCategorie as $categorie => $ventes) {
    //         // Titre de la catégorie
    //         $pdf->SetFont('Arial', 'B', 12);
    //         $pdf->SetFillColor(192, 192, 192);
    //         $pdf->Cell(0, 10, utf8_decode("Catégorie : $categorie"), 0, 1, 'L', true);
    //         $pdf->Ln(2);

    //         // En-têtes du tableau
    //         $pdf->SetFont('Arial', '', 10);
    //         $headers = ['Num Vente', 'Client', 'Produit', 'Prix Unitaire', 'Quantité', 'Montant TTC', 'Mode Règlement', 'Table', 'Date'];
    //         $widths = [27, 40, 40, 30, 30, 30, 30, 30, 30];

    //         foreach ($headers as $i => $header) {
    //             $pdf->Cell($widths[$i], 7, utf8_decode($header), 1, 0, 'C', true);
    //         }
    //         $pdf->Ln();

    //         // Données des ventes
    //         $pdf->SetFont('Arial', '', 10);
    //         foreach ($ventes as $vente) {
    //             $totalTTC += $vente['montant_ttc'];

    //             $pdf->Cell($widths[0], 7, utf8_decode($vente['numvente']), 1, 0, 'C');
    //             $pdf->Cell($widths[1], 7, utf8_decode($vente['client']), 1, 0, 'C');
    //             $pdf->Cell($widths[2], 7, utf8_decode($vente['produit']), 1, 0, 'C');
    //             $pdf->Cell($widths[3], 7, utf8_decode(number_format($vente['prix_unitaire'], 2)), 1, 0, 'C');
    //             $pdf->Cell($widths[4], 7, utf8_decode($vente['quantite']), 1, 0, 'C');
    //             $pdf->Cell($widths[5], 7, utf8_decode(number_format($vente['montant_ttc'], 2)), 1, 0, 'C');
    //             $pdf->Cell($widths[6], 7, utf8_decode($vente['mode_reglement']), 1, 0, 'C');
    //             $pdf->Cell($widths[7], 7, utf8_decode($vente['table']), 1, 0, 'C');
    //             $pdf->Cell($widths[8], 7, utf8_decode($vente['date']), 1, 0, 'C');
    //             $pdf->Ln();
    //         }

    //         $pdf->Ln(5); // Ajouter un espace après chaque catégorie
    //     }

    //     // Total général
    //     $pdf->SetFont('Arial', 'B', 12);
    //     $pdf->Cell(80, 7, utf8_decode('Total TTC:'), 1, 0, 'R');
    //     $pdf->Cell(30, 7, utf8_decode(number_format($totalTTC, 2)), 1, 0, 'C');

    //     return response($pdf->Output('S', 'ventes_par_categorie.pdf'), 200)
    //         ->header('Content-Type', 'application/pdf')
    //         ->header('Content-Disposition', 'attachment; filename="ventes_du_jour.pdf"');
    // }




    // public function PrintAllVente(Request $request)
    // {
    //     // Récupérer les critères de filtrage depuis la requête
    //     $modereglement = $request->input('modereglement'); // Filtrer par mode de règlement (optionnel)
    //     $table = $request->input('table'); // Filtrer par table (optionnel)

    //     // Construire la requête de base
    //     $query = TFacture::with(['modereglement', 'table', 'items.product']) // jointure avec TfactureLigne et TProduct
    //         ->where('numvente', 'like', 'POS%')
    //         ->whereDate('created_at', Carbon::today()) // Ventes du jour uniquement
    //         ->orderByDesc('created_at');

    //     // Appliquer le filtre par mode de règlement si spécifié
    //     if (!empty($modereglement)) {
    //         $query->whereHas('modereglement', function ($q) use ($modereglement) {
    //             $q->where('id', $modereglement);
    //         });
    //     }

    //     // Appliquer le filtre par table si spécifié
    //     if (!empty($table)) {
    //         $query->whereHas('table', function ($q) use ($table) {
    //             $q->where('id', $table);
    //         });
    //     }

    //     // Récupérer les ventes filtrées
    //     $listeventes = $query->get();

    //     // Générer le PDF
    //     $pdf = new FPDF();
    //     $pdf->AddPage('L', 'A4'); // Format paysage
    //     $pdf->SetFont('Arial', 'B', 14);

    //     // En-tête principal
    //     $pdf->SetTextColor(0, 0, 0); // Couleur noire pour le texte
    //     $pdf->Cell(0, 10, utf8_decode('ETAT DES VENTES'), 0, 1, 'C');
    //     $pdf->SetFont('Arial', '', 10);
    //     $pdf->Cell(0, 6, utf8_decode('(de la journée)'), 0, 1, 'C');

    //     // Trait horizontal gris sous le titre
    //     $pdf->Ln(3);
    //     $pdf->SetDrawColor(192, 192, 192);
    //     $pdf->Line(10, $pdf->GetY(), 290, $pdf->GetY());
    //     $pdf->Ln(5);

    //     // En-tête du tableau
    //     $pdf->SetFont('Arial', '', 10);
    //     $pdf->SetFillColor(192, 192, 192); // Fond gris
    //     $headers = [
    //         'Num Vente',
    //         'Client',
    //         'Produit',
    //         'Prix Unitaire',
    //         'Quantité',
    //         'Montant TTC',
    //         'Mode Règlement',
    //         'Table',
    //         'Date de Création'
    //     ];
    //     $widths = [27, 40, 40, 30, 30, 30, 30, 30, 30];

    //     foreach ($headers as $i => $header) {
    //         $pdf->Cell($widths[$i], 7, utf8_decode($header), 1, 0, 'C', true);
    //     }
    //     $pdf->Ln();

    //     // Corps du tableau
    //     $pdf->SetFont('Arial', '', 10);
    //     foreach ($listeventes as $vente) {
    //         foreach ($vente->items as $ligne) {
    //             $produit = $ligne->product;
    //             $quantite = $ligne->quantite;
    //             $prixUnitaire = $ligne->prix_unitaire;
    //             $montantTTC = $ligne->montant_ttc;


    //             // Afficher les données pour chaque ligne
    //             $pdf->Cell($widths[0], 7, utf8_decode($vente->numvente), 1, 0, 'C');
    //             $pdf->Cell($widths[1], 7, utf8_decode(\Str::limit($vente->nom, 12)), 1, 0, 'C');
    //             $pdf->Cell($widths[2], 7, utf8_decode($produit->libelleproduct), 1, 0, 'C'); // Nom du produit
    //             $pdf->Cell($widths[3], 7, utf8_decode(number_format($prixUnitaire, 2)), 1, 0, 'C');
    //             $pdf->Cell($widths[4], 7, utf8_decode($quantite), 1, 0, 'C');
    //             $pdf->Cell($widths[5], 7, utf8_decode(number_format($montantTTC, 2)), 1, 0, 'C');
    //             $pdf->Cell($widths[6], 7, utf8_decode($vente->modereglement->libellemodereglement ?? '-'), 1, 0, 'C');
    //             $pdf->Cell($widths[7], 7, utf8_decode($vente->table->name ?? '-'), 1, 0, 'C');
    //             $pdf->Cell($widths[8], 7, utf8_decode($vente->created_at->format('d/m/Y')), 1, 0, 'C');
    //             $pdf->Ln();
    //         }
    //     }

    //     // // Ajouter le total à la fin du tableau
    //     // $pdf->Ln(5);
    //     // $pdf->SetFont('Arial', 'B', 10);
    //     // $pdf->Cell(160, 7, utf8_decode('Total HT:'), 1, 0, 'R');
    //     // $pdf->Cell(30, 7, utf8_decode(number_format($totalMontantHT, 2)), 1, 0, 'C');
    //     // $pdf->Ln();
    //     // $pdf->Cell(160, 7, utf8_decode('Total TVA:'), 1, 0, 'R');
    //     // $pdf->Cell(30, 7, utf8_decode(number_format($totalMontantTVA, 2)), 1, 0, 'C');
    //     // $pdf->Ln();
    //     // $pdf->Cell(160, 7, utf8_decode('Total TTC:'), 1, 0, 'R');
    //     // $pdf->Cell(30, 7, utf8_decode(number_format($totalMontantTTC, 2)), 1, 0, 'C');
    //     // $pdf->Ln();

    //     // Retourner le PDF en réponse
    //     return response($pdf->Output('S', 'ventes_filtrees.pdf'), 200)
    //         ->header('Content-Type', 'application/pdf')
    //         ->header('Content-Disposition', 'attachment; filename="ventes_du_jour.pdf"');
    // }


    // public function PrintAllVente(Request $request)
    // {
    //     // Récupérer les critères de filtrage depuis la requête
    //     $modereglement = $request->input('modereglement'); // Filtrer par mode de règlement (optionnel)
    //     $table = $request->input('table'); // Filtrer par table (optionnel)

    //     // Construire la requête de base
    //     $query = TFacture::with(['modereglement', 'table', 'items.product']) // jointure avec TfactureLigne et TProduct
    //         ->where('numvente', 'like', 'POS%')
    //         ->whereDate('created_at', Carbon::today()) // Ventes du jour uniquement
    //         ->orderByDesc('created_at');

    //     // Appliquer le filtre par mode de règlement si spécifié
    //     if (!empty($modereglement)) {
    //         $query->whereHas('modereglement', function ($q) use ($modereglement) {
    //             $q->where('id', $modereglement);
    //         });
    //     }

    //     // Appliquer le filtre par table si spécifié
    //     if (!empty($table)) {
    //         $query->whereHas('table', function ($q) use ($table) {
    //             $q->where('id', $table);
    //         });
    //     }

    //     // Récupérer les ventes filtrées
    //     $listeventes = $query->get();

    //     // Générer le PDF
    //     $pdf = new FPDF();
    //     $pdf->AddPage('L', 'A4'); // Format paysage
    //     $pdf->SetFont('Arial', 'B', 14);

    //     // En-tête principal
    //     $pdf->SetTextColor(0, 0, 0); // Couleur noire pour le texte
    //     $pdf->Cell(0, 10, utf8_decode('ETAT DES VENTES'), 0, 1, 'C');
    //     $pdf->SetFont('Arial', '', 10);
    //     $pdf->Cell(0, 6, utf8_decode('(de la journée)'), 0, 1, 'C');

    //     // Trait horizontal gris sous le titre
    //     $pdf->Ln(3);
    //     $pdf->SetDrawColor(192, 192, 192);
    //     $pdf->Line(10, $pdf->GetY(), 290, $pdf->GetY());
    //     $pdf->Ln(5);

    //     // En-tête du tableau
    //     $pdf->SetFont('Arial', '', 10);
    //     $pdf->SetFillColor(192, 192, 192); // Fond gris
    //     $headers = [
    //         'Num Vente',
    //         'Client',
    //         'Produit',
    //         'Prix Unitaire',
    //         'Quantité',
    //         'Montant TTC',
    //         'Mode Règlement',
    //         'Table',
    //         'Date de Création'
    //     ];
    //     $widths = [27, 40, 40, 30, 30, 30, 30, 30, 30];

    //     foreach ($headers as $i => $header) {
    //         $pdf->Cell($widths[$i], 7, utf8_decode($header), 1, 0, 'C', true);
    //     }
    //     $pdf->Ln();

    //     // Initialiser le total TTC
    //     $totalTTC = 0;

    //     // Corps du tableau
    //     $pdf->SetFont('Arial', '', 10);
    //     foreach ($listeventes as $vente) {
    //         foreach ($vente->items as $ligne) {
    //             $produit = $ligne->product;
    //             $quantite = $ligne->quantite;
    //             $prixUnitaire = $ligne->prix_unitaire;
    //             $montantTTC = $ligne->montant_ttc;

    //             // Accumuler le total TTC
    //             $totalTTC += $montantTTC;

    //             // Afficher les données pour chaque ligne
    //             $pdf->Cell($widths[0], 7, utf8_decode($vente->numvente), 1, 0, 'C');
    //             $pdf->Cell($widths[1], 7, utf8_decode(\Str::limit($vente->nom, 12)), 1, 0, 'C');
    //             $pdf->Cell($widths[2], 7, utf8_decode($produit->libelleproduct), 1, 0, 'C'); // Nom du produit
    //             $pdf->Cell($widths[3], 7, utf8_decode(number_format($prixUnitaire, 2)), 1, 0, 'C');
    //             $pdf->Cell($widths[4], 7, utf8_decode($quantite), 1, 0, 'C');
    //             $pdf->Cell($widths[5], 7, utf8_decode(number_format($montantTTC, 2)), 1, 0, 'C');
    //             $pdf->Cell($widths[6], 7, utf8_decode($vente->modereglement->libellemodereglement ?? '-'), 1, 0, 'C');
    //             $pdf->Cell($widths[7], 7, utf8_decode($vente->table->name ?? '-'), 1, 0, 'C');
    //             $pdf->Cell($widths[8], 7, utf8_decode($vente->created_at->format('d/m/Y')), 1, 0, 'C');
    //             $pdf->Ln();
    //         }
    //     }

    //     // Ajouter le total TTC en bas
    //     $pdf->SetXY(10, 70);  // Déplace à la position X de 10 (plus à gauche) et Y de 70
    //     $pdf->Ln(5);  // Espace avant le total
    //     $pdf->SetFont('Arial', 'B', 10);
    //     $pdf->Cell(80, 7, utf8_decode('Total TTC:'), 1, 0, 'R');
    //     $pdf->Cell(30, 7, utf8_decode(number_format($totalTTC, 2)), 1, 0, 'C');
    //     $pdf->Ln();

    //     // Retourner le PDF en réponse
    //     return response($pdf->Output('S', 'ventes_filtrees.pdf'), 200)
    //         ->header('Content-Type', 'application/pdf')
    //         ->header('Content-Disposition', 'attachment; filename="ventes_du_jour.pdf"');
    // }
